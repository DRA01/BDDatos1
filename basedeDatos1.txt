                                    BASE DE DATOS.

Base de datos - "conjunto de informacion ordenada al que se puede acceder de manera sistematica."
__________________________________
|               CAMPOS            |                                   
|_________________|_______________|
|                 |               |
|      EDAD       |    CLIENTE    |
|_________________|_______________|
|                 |               |      TABLA                              
|        20       |     PEPE      |  
|        19       |     JUAN      |
|        32       |     SUSANA    |
|_________________|_______________|        

______________________________________________
|            |                |              |        
|  CLIENTE   |    MODELO      |   PATENTE    |
|____________|________________|______________|
|            |                |              |
| PEPE       |  504           |   SJA394     |
| JUAN       |  Gallardo      |   KSA912     |
| SUSANA     |  Murcielago    |   DSAD432    |
|____________|________________|______________|

El dato es la unidad minima de informacion
informacion es un conjunto de datos en un contexto

R elational
D ata 
B ase
M anagement
S ystem

                                                     RED
                                    __________________|_________________________                              
                                   |                                            |
                                Cliente                                      Servidor
                                   |                          __________________|____________________    
                                 Motor                       |                  |                    |  
                                   |                        db1                db2                  db3
                                   |                                
                                Aplicacion                            


• Atr. simples y compuestos

En los ejemplos considerados hasta ahora, los atributos han sido simpless; es decir, no están divididos en subpartes.
Los atributos compuestos, en cambio, se pueden dividir en subpartes podría estar estructurado
como un atributo compuesto consistente en nombre, primer-apellido y segundo-apellido
tambien un atributo compuesto puede aparecer como una jerarquía dirección-cliente, su
componente calle puede ser a su vez dividido en
número-calle, nombre-calle y piso.

• Atributos derivados. 

El valor para este tipo de atributo se puede derivar de los valores de otros atributos o entidades relacionados.
Ej. el conjunto de entidades cliente que tiene un atributo préstamos que representa cuántos préstamos
tiene un cliente en el banco. Ese atributo se puede
derivar contando el número de entidades préstamo asociadas con ese cliente.
Una relación es una asociación entre diferentes entidades.

La correspondencia de cardinalidades, o razón de cardinalidad, expresa el número de entidades a las que otra
entidad puede estar asociada vía un conjunto de relaciones.
• Uno a uno. Una entidad en A se asocia con a lo
sumo una entidad en B, y una entidad en B se asocia con a lo sumo una entidad en A.

• Uno a varios. Una entidad en A se asocia con cualquier número de entidades en B (ninguna o varias).
Una entidad en B, sin embargo, se puede asociar con
a lo sumo una entidad en A.

• Varios a uno. Una entidad en A se asocia con a lo
sumo una entidad en B. Una entidad en B, sin embargo, se puede asociar con cualquier número de entidades 

• Varios a varios. Una entidad en A se asocia con cualquier número de entidades (ninguna o varias) en B, 
y una entidad en B se asocia con cualquier número de entidades (ninguna o varias) en A.

--------------------------------------------------------------------------------------------------------------------

• (inner) join devuelve registros que tienen valores iguales en ambas tablas
   SELECT (Campos que queremos comparar) FROM (tabla a la izquierda) inner join (tabla a la derecha) 
   on (llave principal de la tabla 1) = (llave de la tabla 2);


• Left (outer) join devuelve todos los registros de la tabla izquierda y los registros que coincidan con los de 
la tabla derecha.
   SELECT (Campos que queremos comparar) FROM (tabla a la izquierda) Left join (tabla a la derecha) 
   on (llave principal de la tabla 1) = (llave de la tabla 2);

• Right (outer) join devuelve los registros de la tabla derecha y los registros que coincidan con los 
de la tabla izquierda.
   SELECT (Campos que queremos comparar) FROM (tabla a la izquierda) Right join (tabla a la derecha) 
   on (llave principal de la tabla 1) = (llave de la tabla 2);

• Full (outer) join devuelve los registros cuando haya una relacion ya sea en la tabla izquierda o derecha.
   SELECT (Campos que queremos comparar) FROM (tabla a la izquierda) Full join (tabla a la derecha) 
   on (llave principal de la tabla 1) = (llave de la tabla 2);

• ipconfig en cmd de win10

• ping (IP) sirve para ver la respuesta de dicha IP puesta en el atributo del cmd



• Normalizacion.
FORMAL NORMAL1: decimo que una tabla esta en forma normal 1 si se cumplen las siguientes condiciones:
-	Todos los atributos son atomicos
-	La tabla tiene que tener una clave primaria única
-	La clave primaria no contiene atributos nulos
-	No debe existir variación en el numero de columnas
-	Los campos no clave deben identificarse por la clave es decir, que los campos no clave dependen funcionalmente de la clave 
-	Debe existir una independencia tanto en el orden de la fila como de las columnas es decir, si los datos cambian de orden no deben cambiar su significado

FORMAL NORMAL 2: la segunda formal normal, una tabla esta en formal normal 2, si primero se encuentra en primera formal normal y luego se cumpla que los atributos no claves dependan de toda la clave principal.
Por ejemplo, si tenemos una tabla con personas ubicadas por su DNI y obtenemos su empresa y dirección de trabajo, la clave en este caso seria DNI_empresa.
Pero nos encontramos con que una misma persona puede trabajar en varias empresas y vemos que la dirección de trabajo no depende de toda la clave primaria, sino solo de empresa, por lo tanto, no estamos en SEGUNDA FORMA NORMAL.

FORMAL NORMAL 3: decimos que una tabla esta en tercera forma normal, si además de estar en segunda FN, no existe ninguna dependencia transitiva entre los atributos que no son claves.
Ejemplo, tenemos una tabla de ganadores de torneo de tenis. En ella figura el nombre del torneo, el año, el nombre del ganador, y su nacionalidad, la clave seria “torneo_anio”.
Ahora, esta tabla no esta en FN3 porque el atributo nacionalidad, que no es de la clave, depende del torneo del ganador (también depende de la clave). Digamos que nacionalidad aporta información sobre el ganador, pero no sobre su clave.
Es una dependencia transitiva porq nacionalidad depende de ganador que a su vez depende de torneo.
